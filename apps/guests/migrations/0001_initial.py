# Generated by Django 4.2.23 on 2025-08-02 10:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number must be valid', regex='^\\+?1?\\d{9,15}$')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('nationality', models.CharField(blank=True, max_length=100)),
                ('passport_number', models.CharField(blank=True, max_length=50)),
                ('id_type', models.CharField(blank=True, choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('driving_license', 'Driving License'), ('other', 'Other')], max_length=20)),
                ('id_number', models.CharField(blank=True, max_length=50)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('vip_status', models.CharField(choices=[('regular', 'Regular'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], default='regular', max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('dietary_restrictions', models.TextField(blank=True)),
                ('room_preferences', models.TextField(blank=True)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('business_phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Guest',
                'verbose_name_plural': 'Guests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GuestDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('driving_license', 'Driving License'), ('visa', 'Visa'), ('other', 'Other')], max_length=20)),
                ('document_number', models.CharField(max_length=100)),
                ('issuing_country', models.CharField(blank=True, max_length=100)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('document_file', models.FileField(blank=True, upload_to='guest_documents/')),
                ('is_verified', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Guest Document',
                'verbose_name_plural': 'Guest Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GuestPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_floor', models.PositiveIntegerField(blank=True, null=True)),
                ('smoking_preference', models.BooleanField(default=False)),
                ('accessibility_requirements', models.TextField(blank=True)),
                ('housekeeping_frequency', models.CharField(choices=[('daily', 'Daily'), ('on_request', 'On Request'), ('do_not_disturb', 'Do Not Disturb')], default='daily', max_length=20)),
                ('preferred_language', models.CharField(default='English', max_length=50)),
                ('communication_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('sms', 'SMS')], default='email', max_length=20)),
                ('special_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Guest Preference',
                'verbose_name_plural': 'Guest Preferences',
            },
        ),
        migrations.CreateModel(
            name='HistoricalGuest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number must be valid', regex='^\\+?1?\\d{9,15}$')])),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('nationality', models.CharField(blank=True, max_length=100)),
                ('passport_number', models.CharField(blank=True, max_length=50)),
                ('id_type', models.CharField(blank=True, choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('driving_license', 'Driving License'), ('other', 'Other')], max_length=20)),
                ('id_number', models.CharField(blank=True, max_length=50)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('vip_status', models.CharField(choices=[('regular', 'Regular'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum')], default='regular', max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('dietary_restrictions', models.TextField(blank=True)),
                ('room_preferences', models.TextField(blank=True)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('job_title', models.CharField(blank=True, max_length=100)),
                ('business_phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Guest',
                'verbose_name_plural': 'historical Guests',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGuestDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('driving_license', 'Driving License'), ('visa', 'Visa'), ('other', 'Other')], max_length=20)),
                ('document_number', models.CharField(max_length=100)),
                ('issuing_country', models.CharField(blank=True, max_length=100)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('document_file', models.TextField(blank=True, max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Guest Document',
                'verbose_name_plural': 'historical Guest Documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalGuestPreference',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('preferred_floor', models.PositiveIntegerField(blank=True, null=True)),
                ('smoking_preference', models.BooleanField(default=False)),
                ('accessibility_requirements', models.TextField(blank=True)),
                ('housekeeping_frequency', models.CharField(choices=[('daily', 'Daily'), ('on_request', 'On Request'), ('do_not_disturb', 'Do Not Disturb')], default='daily', max_length=20)),
                ('preferred_language', models.CharField(default='English', max_length=50)),
                ('communication_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('sms', 'SMS')], default='email', max_length=20)),
                ('special_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('guest', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='guests.guest')),
            ],
            options={
                'verbose_name': 'historical Guest Preference',
                'verbose_name_plural': 'historical Guest Preferences',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
