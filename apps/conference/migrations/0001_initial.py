# Generated by Django 4.2.23 on 2025-08-02 10:40

from django.db import migrations, models
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConferenceBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_number', models.CharField(max_length=20, unique=True)),
                ('client_name', models.CharField(max_length=200)),
                ('client_email', models.EmailField(max_length=254)),
                ('client_phone', models.CharField(max_length=15)),
                ('event_title', models.CharField(max_length=200)),
                ('event_description', models.TextField(blank=True)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('attendees_count', models.PositiveIntegerField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('special_requirements', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Conference Booking',
                'verbose_name_plural': 'Conference Bookings',
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='ConferenceEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('equipment_type', models.CharField(choices=[('projector', 'Projector'), ('screen', 'Screen'), ('sound_system', 'Sound System'), ('microphone', 'Microphone'), ('video_conference', 'Video Conference'), ('whiteboard', 'Whiteboard'), ('flipchart', 'Flipchart'), ('computer', 'Computer'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_available', models.BooleanField(default=True)),
                ('maintenance_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Conference Equipment',
                'verbose_name_plural': 'Conference Equipment',
                'ordering': ['equipment_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ConferenceEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('meeting', 'Meeting'), ('conference', 'Conference'), ('seminar', 'Seminar'), ('workshop', 'Workshop'), ('presentation', 'Presentation'), ('training', 'Training'), ('other', 'Other')], max_length=20)),
                ('organizer_name', models.CharField(max_length=200)),
                ('organizer_phone', models.CharField(blank=True, max_length=15)),
                ('agenda', models.TextField(blank=True)),
                ('catering_required', models.BooleanField(default=False)),
                ('catering_details', models.TextField(blank=True)),
                ('technical_support_required', models.BooleanField(default=False)),
                ('technical_requirements', models.TextField(blank=True)),
                ('setup_time_required', models.PositiveIntegerField(default=0, help_text='Setup time in minutes')),
                ('cleanup_time_required', models.PositiveIntegerField(default=0, help_text='Cleanup time in minutes')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Conference Event',
                'verbose_name_plural': 'Conference Events',
            },
        ),
        migrations.CreateModel(
            name='ConferencePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online Payment'), ('other', 'Other')], max_length=20)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Conference Payment',
                'verbose_name_plural': 'Conference Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='ConferenceRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('capacity', models.PositiveIntegerField()),
                ('floor', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Maintenance'), ('cleaning', 'Cleaning'), ('out_of_order', 'Out of Order')], default='available', max_length=20)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField(blank=True)),
                ('amenities', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Conference Room',
                'verbose_name_plural': 'Conference Rooms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalConferenceBooking',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('booking_number', models.CharField(db_index=True, max_length=20)),
                ('client_name', models.CharField(max_length=200)),
                ('client_email', models.EmailField(max_length=254)),
                ('client_phone', models.CharField(max_length=15)),
                ('event_title', models.CharField(max_length=200)),
                ('event_description', models.TextField(blank=True)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('attendees_count', models.PositiveIntegerField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('pending', 'Pending'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('special_requirements', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Conference Booking',
                'verbose_name_plural': 'historical Conference Bookings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConferenceEquipment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('equipment_type', models.CharField(choices=[('projector', 'Projector'), ('screen', 'Screen'), ('sound_system', 'Sound System'), ('microphone', 'Microphone'), ('video_conference', 'Video Conference'), ('whiteboard', 'Whiteboard'), ('flipchart', 'Flipchart'), ('computer', 'Computer'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_available', models.BooleanField(default=True)),
                ('maintenance_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Conference Equipment',
                'verbose_name_plural': 'historical Conference Equipment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConferenceEvent',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('meeting', 'Meeting'), ('conference', 'Conference'), ('seminar', 'Seminar'), ('workshop', 'Workshop'), ('presentation', 'Presentation'), ('training', 'Training'), ('other', 'Other')], max_length=20)),
                ('organizer_name', models.CharField(max_length=200)),
                ('organizer_phone', models.CharField(blank=True, max_length=15)),
                ('agenda', models.TextField(blank=True)),
                ('catering_required', models.BooleanField(default=False)),
                ('catering_details', models.TextField(blank=True)),
                ('technical_support_required', models.BooleanField(default=False)),
                ('technical_requirements', models.TextField(blank=True)),
                ('setup_time_required', models.PositiveIntegerField(default=0, help_text='Setup time in minutes')),
                ('cleanup_time_required', models.PositiveIntegerField(default=0, help_text='Cleanup time in minutes')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Conference Event',
                'verbose_name_plural': 'historical Conference Events',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConferencePayment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online Payment'), ('other', 'Other')], max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, editable=False)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Conference Payment',
                'verbose_name_plural': 'historical Conference Payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalConferenceRoom',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('capacity', models.PositiveIntegerField()),
                ('floor', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Maintenance'), ('cleaning', 'Cleaning'), ('out_of_order', 'Out of Order')], default='available', max_length=20)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField(blank=True)),
                ('amenities', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Conference Room',
                'verbose_name_plural': 'historical Conference Rooms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
