# Generated by Django 4.2.23 on 2025-08-02 10:40

import apps.bookings.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_number', models.CharField(default=apps.bookings.models.generate_booking_number, max_length=20, unique=True)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('check_in_time', models.TimeField(default='14:00')),
                ('check_out_time', models.TimeField(default='11:00')),
                ('number_of_guests', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('guest_names', models.TextField(blank=True, help_text='Names of all guests')),
                ('room_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('balance_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('dietary_restrictions', models.TextField(blank=True)),
                ('room_preferences', models.TextField(blank=True)),
                ('source', models.CharField(choices=[('direct', 'Direct'), ('website', 'Website'), ('phone', 'Phone'), ('travel_agent', 'Travel Agent'), ('online_booking', 'Online Booking'), ('walk_in', 'Walk-in')], default='direct', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online Payment'), ('check', 'Check'), ('other', 'Other')], max_length=20)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Booking Payment',
                'verbose_name_plural': 'Booking Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_datetime', models.DateTimeField(auto_now_add=True)),
                ('id_verified', models.BooleanField(default=False)),
                ('payment_verified', models.BooleanField(default=False)),
                ('room_inspected', models.BooleanField(default=False)),
                ('room_key_issued', models.BooleanField(default=False)),
                ('special_instructions', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Check In',
                'verbose_name_plural': 'Check Ins',
            },
        ),
        migrations.CreateModel(
            name='CheckOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_out_datetime', models.DateTimeField(auto_now_add=True)),
                ('room_inspected', models.BooleanField(default=False)),
                ('keys_returned', models.BooleanField(default=False)),
                ('payment_completed', models.BooleanField(default=False)),
                ('additional_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('late_checkout', models.BooleanField(default=False)),
                ('late_checkout_hours', models.PositiveIntegerField(default=0)),
                ('guest_satisfaction', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Check Out',
                'verbose_name_plural': 'Check Outs',
            },
        ),
        migrations.CreateModel(
            name='HistoricalBooking',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('booking_number', models.CharField(db_index=True, default=apps.bookings.models.generate_booking_number, max_length=20)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('check_in_time', models.TimeField(default='14:00')),
                ('check_out_time', models.TimeField(default='11:00')),
                ('number_of_guests', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('guest_names', models.TextField(blank=True, help_text='Names of all guests')),
                ('room_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('balance_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('partial', 'Partial'), ('paid', 'Paid'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('special_requests', models.TextField(blank=True)),
                ('dietary_restrictions', models.TextField(blank=True)),
                ('room_preferences', models.TextField(blank=True)),
                ('source', models.CharField(choices=[('direct', 'Direct'), ('website', 'Website'), ('phone', 'Phone'), ('travel_agent', 'Travel Agent'), ('online_booking', 'Online Booking'), ('walk_in', 'Walk-in')], default='direct', max_length=50)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Booking',
                'verbose_name_plural': 'historical Bookings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBookingPayment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('online', 'Online Payment'), ('check', 'Check'), ('other', 'Other')], max_length=20)),
                ('payment_date', models.DateTimeField(blank=True, editable=False)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Booking Payment',
                'verbose_name_plural': 'historical Booking Payments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCheckIn',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('check_in_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id_verified', models.BooleanField(default=False)),
                ('payment_verified', models.BooleanField(default=False)),
                ('room_inspected', models.BooleanField(default=False)),
                ('room_key_issued', models.BooleanField(default=False)),
                ('special_instructions', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Check In',
                'verbose_name_plural': 'historical Check Ins',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCheckOut',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('check_out_datetime', models.DateTimeField(blank=True, editable=False)),
                ('room_inspected', models.BooleanField(default=False)),
                ('keys_returned', models.BooleanField(default=False)),
                ('payment_completed', models.BooleanField(default=False)),
                ('additional_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('late_checkout', models.BooleanField(default=False)),
                ('late_checkout_hours', models.PositiveIntegerField(default=0)),
                ('guest_satisfaction', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('booking', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bookings.booking')),
            ],
            options={
                'verbose_name': 'historical Check Out',
                'verbose_name_plural': 'historical Check Outs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
